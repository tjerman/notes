<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>untitled</title>
    <link>https://tjerman.github.io/</link>
    <description>Recent content on untitled</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 30 Jan 2022 15:43:12 +0100</lastBuildDate><atom:link href="https://tjerman.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a simple money tracking mobile application with Corteza</title>
      <link>https://tjerman.github.io/posts/money/</link>
      <pubDate>Sun, 30 Jan 2022 15:43:12 +0100</pubDate>
      
      <guid>https://tjerman.github.io/posts/money/</guid>
      <description>This project is the result of my experimentation with mobile development. Do keep this in mind if you decide to follow my instructions to implement your mobile app. The concepts are there, but some Flutter related specifics may not be that by the book.
The source code is available on GitHub/tjerman/money.
What we will be building We&amp;rsquo;ll build simple money tracking application that holds a list of transactions (inbound and outbound).</description>
    </item>
    
    <item>
      <title>How to make writing stuff easy</title>
      <link>https://tjerman.github.io/posts/how-to-make-writing-ez/</link>
      <pubDate>Sat, 29 Jan 2022 13:44:22 +0100</pubDate>
      
      <guid>https://tjerman.github.io/posts/how-to-make-writing-ez/</guid>
      <description>You just got a great idea to make your very own blog. You search for the best framework. You come up with an excellent title for it. You get the perfect idea of what your first blog post should be. You open up your editor and&amp;hellip; so&amp;hellip; what now?
Why is this so hard? The two most common problems I observe with my colleagues are the structure and the amount of content.</description>
    </item>
    
    <item>
      <title>Why you should overengineer your code (sometimes)</title>
      <link>https://tjerman.github.io/posts/why-overengineering-is-good/</link>
      <pubDate>Wed, 19 Jan 2022 18:35:59 +0100</pubDate>
      
      <guid>https://tjerman.github.io/posts/why-overengineering-is-good/</guid>
      <description>Let&amp;rsquo;s firstly clarify what I mean by overengineering.
I&amp;rsquo;m not saying you should do things like use is-even or solve trivial math problems with more loops than you can count with your fingers&amp;hellip; I am saying that you should only do it if you can&amp;rsquo;t think of something better on the spot.
This might sound strange at first, but hear me out, ok?
To prove my point, let&amp;rsquo;s use some diagrams to show the developer mental state during the development and maintenance phases.</description>
    </item>
    
  </channel>
</rss>
